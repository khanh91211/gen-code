package ${basePackage}.${mdlNameLower}.${ettNameLower}.dto;

import lombok.Getter;
import lombok.Setter;
import ${basePackage}.common.constants.ValidationType;
import io.swagger.annotations.ApiModelProperty;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.validation.constraints.Pattern;
import java.util.Date;

@Getter
@Setter
public class ${ettNamePpt}Request {
#if(${ett.genService} == 'TRUE' && ${ett.genCtrl} == 'TRUE')
    private String id;
#end
#foreach($ppt in $ppts)
#if($ppt.min != '' && $ppt.min != ' ' && $ppt.max != '' && $ppt.max != ' ')
    @Size(min = ${ppt.min}, max = ${ppt.max})
#elseif($ppt.min != '')
    @Size(min = ${ppt.min})
#elseif($ppt.max != '')
    @Size(max = ${ppt.max})
#end
#if($ppt.required == 'TRUE')
    @NotNull
#end
#if($ppt.pattern != '')
#foreach($vl in $vld)
#if($vl.nameEn == ${ppt.pattern})
    @Pattern(regexp = ValidationType.$textUtils.wordsToUpperCase(${vl.nameEn}), message = "")
#end
#end
#end
#if($ppt.type == 'id' && $ptt.refType != '')
#if($ppt.nameDisplay.isBlank())
#else
    @ApiModelProperty(value = "${ppt.nameDisplay}", example = "")
#end
    private String $textUtils.wordsToCamel(${ppt.nameProperty});
#else
#if($ppt.nameDisplay.isBlank())
#else
    @ApiModelProperty(value = "${ppt.nameDisplay}", example = "")
#end
    private ${ppt.type} $textUtils.wordsToCamel(${ppt.nameProperty});
#end
#end

}
