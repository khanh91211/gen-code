package ${basePackageImport}.model.entity.${pckNameLower};

import lombok.Getter;
import lombok.Setter;
#foreach($ppt in $ppts)
#if($ptt.refType != '' && $textUtils.wordsToLowerCase($ppt.idType) == 'uuid')
import org.hibernate.annotations.GenericGenerator;
#break
#end
#end

import javax.persistence.*;
#foreach($ppt in $ppts)
#if($ppt.type == 'Date')
import java.util.Date;
#break
#end
#end
#foreach($ppt in $ppts)
#if($textUtils.wordsToSnakeUpper($ppt.nameColumn) == 'CREATED_DATE')
#set($createdDate = 'S')
#end
#if($textUtils.wordsToSnakeUpper($ppt.nameColumn) == 'CREATOR')
#set($creator = 'S')
#end
#if($textUtils.wordsToSnakeUpper($ppt.nameColumn) == 'APPROVER')
#set($approver = 'S')
#end
#if($textUtils.wordsToSnakeUpper($ppt.nameColumn) == 'APPROVED_DATE')
#set($approvedDate = 'S')
#end
#end
#if($!{createdDate} && $!{creator} && $!{approver} && $!{approvedDate})
import ${basePackageImport}.model.entity.EntityBase;
#end

/**
 * @author khanhtd
 * @Date 2023
 */
@Getter
@Setter
@Entity
#set($ettNameUpper = $textUtils.wordsToSnakeUpper(${ett.lineKey}).concat("_").concat($textUtils.wordsToSnakeUpper(${ett.typeKey})).concat("_").concat($textUtils.wordsToSnakeUpper(${ett.entityKey})))
@Table(name = "${ettNameUpper}")
#if($!{createdDate} && $!{creator} && $!{approver} && $!{approvedDate})
public class ${ettFirstUpperCamel} extends EntityBase {
#else
public class ${ettFirstUpperCamel} {
#end
#foreach($ppt in $ppts)
#if($ptt.refType != '' && $textUtils.wordsToLowerCase($ppt.idType) == 'seq')
    @Id
    @Column(name = "$textUtils.wordsToSnakeUpper(${ppt.nameColumn})")
    @SequenceGenerator(name = "${ettNameUpper}_GENERATOR", sequenceName = "SEQ_${ettNameUpper}", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "${ettNameUpper}_GENERATOR")
    private long $textUtils.wordsToCamel(${ppt.nameProperty});
#elseif($ptt.refType != '' && $textUtils.wordsToLowerCase($ppt.idType) == 'uuid')
    @Id
    @Column(name = "$textUtils.wordsToSnakeUpper(${ppt.nameColumn})")
    @GeneratedValue(strategy = GenerationType.IDENTITY, generator = "custom-id-generator")
    @GenericGenerator(name = "custom-id-generator", strategy = "com.mbv.model.CustomIdGenerator")
    private String $textUtils.wordsToCamel(${ppt.nameProperty});
#else
#if($!{createdDate} && $!{creator} && $!{approver} && $!{approvedDate} && $textUtils.wordsToSnakeUpper($ppt.nameColumn) == 'CREATED_DATE')
#elseif($!{createdDate} && $!{creator} && $!{approver} && $!{approvedDate} && $textUtils.wordsToSnakeUpper($ppt.nameColumn) == 'CREATOR')
#elseif($!{createdDate} && $!{creator} && $!{approver} && $!{approvedDate} && $textUtils.wordsToSnakeUpper($ppt.nameColumn) == 'APPROVER')
#elseif($!{createdDate} && $!{creator} && $!{approver} && $!{approvedDate} && $textUtils.wordsToSnakeUpper($ppt.nameColumn) == 'APPROVED_DATE')
#else
    @Basic
    @Column(name = "$textUtils.wordsToSnakeUpper(${ppt.nameColumn})")
    private ${ppt.type} $textUtils.wordsToCamel(${ppt.nameProperty});
#end
#end
#end
}
